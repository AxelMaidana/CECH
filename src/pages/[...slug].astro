---
import Layout from '../layouts/LayoutPage.astro';
import EditorComponent from '../components/common/Editor';
import { db } from '../firebase/client';
import { collection, getDocs, doc, getDoc } from 'firebase/firestore';
import Card from '../components/noticias/ultNoticias';

const { slug } = Astro.params;
const pageId = slug || 'index';

// Verifica si la página existe en Firestore
const pageRef = doc(db, 'pages', pageId);
const pageSnap = await getDoc(pageRef); // Cambié getDocs por getDoc

let pageExists = pageSnap.exists();
let pageTitle = pageExists ? pageSnap.data().title || slug : 'Page Not Found';

// Traer las noticias de la base de datos
const noticiasCollection = collection(db, 'noticias');
const querySnapshot = await getDocs(noticiasCollection);
const noticias = querySnapshot.docs.map(doc => ({
  id: doc.id,
  ...doc.data()
}));

// Obtener los permisos del usuario
const usersRef = collection(db, 'users');
const usersSnapshot = await getDocs(usersRef);
const permissions = {};
let userId = false; // Inicializa userId como false
usersSnapshot.forEach(doc => {
  const userData = doc.data();
  if (userData.permissions) {
    Object.assign(permissions, userData.permissions);
  }
  // Verifica si el usuario está logueado
  if (userData.uid) {
    userId = true; // Cambia a true si hay un uid
  }
});

---

<Layout title={pageTitle}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
    <div class="flex flex-col lg:flex-row gap-6">
      <!-- Columna de últimas noticias -->
      <aside class="w-full lg:w-80 flex-shrink-0">
        <h2 class="text-xl sm:text-2xl font-bold text-gray-800 mb-4">Últimas Noticias</h2>
        <div class="relative">
          <div class="overflow-x-auto lg:overflow-visible scrollbar-hide px-4 sm:px-0">
            <ul class="flex flex-row lg:flex-col gap-4 pb-4 lg:pb-0">
              {noticias.map((noticia) => (
                <li class="flex-shrink-0">
                  <Card
                    title={noticia.title}
                    imageUrl={noticia.imageUrl}
                    date={noticia.date}
                    id={noticia.id}
                    client:only="react"
                  />
                </li>
              ))}
            </ul>
          </div>
        </div>
      </aside>

      <!-- Línea separadora -->
      <div class="hidden lg:block w-px bg-gray-200 self-stretch mx-2"></div>

      <!-- Contenido principal -->
      <main class="flex-1 w-full">
        <EditorComponent client:only="react" pageId={pageId} permissions={permissions} userId={userId} />
      </main>
    </div>
  </div>
</Layout>

<style>
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
</style>

